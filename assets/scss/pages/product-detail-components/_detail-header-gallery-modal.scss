.detail-gallery-overlay {
  //display: none ; // @todo: add styling later
  opacity: 0;
  pointer-events: none;
  transition: opacity .3s;

  position: fixed;

  top:0;
  left:0;
  right:0;
  bottom:0;

  z-index: $zindex-modal;

  background-color: rgba($modal-backdrop-bg, $modal-backdrop-opacity);

  &.open {
    opacity: 1;
    pointer-events: auto;
  }

  // -- gallery modal is a static component. just uses some bootstrap variables for backdrop

  // close
  button.detail-gallery-overlay-close {
    @include button-reset();

    position: absolute;
    top: 1rem;
    right: 1rem;

    z-index: 10;

    @include media-breakpoint-up(lg) {
      top: $grid-gutter-width;
      right: $grid-gutter-width;
    }

    // -- use variables of slider controls for this one
    display: flex;
    align-items: center;
    line-height: 0;
    justify-content: center;
    pointer-events: auto;

    transition: border-color .3s, color .3s, background-color .3s, opacity .3s;
    background-color: $slider-controls-on-image-light-bg;
    color: $slider-controls-on-image-light-color;

    width: $slider-controls-size;
    height: $slider-controls-size;
    flex: 0 0 $slider-controls-size;
    max-width: 100%;

    @include border-radius($slider-controls-border-radius);

    @if ( $slider-controls-on-image-light-border-width != 0 ) {
      border-width: $slider-controls-on-image-light-border-width;
      border-style: solid;
      border-color: $slider-controls-on-image-light-border-color;
    }

    > svg {
      width: $slider-controls-icon-size;
      height: $slider-controls-icon-size;
    }

    &:not([disabled]) {
      &:hover {
        color: $slider-controls-on-image-light-hover-color;
        background-color: $slider-controls-on-image-light-hover-bg;

        @if ( $slider-controls-on-image-light-border-width != 0 ) {
          border-color: $slider-controls-on-image-light-hover-border-color;
        }
      }
    }

    // -- disabled
    &[disabled] {
      pointer-events: none;
      cursor: not-allowed;
      opacity: $slider-controls-disabled-opacity;
    }

    @include media-breakpoint-up(lg) {
      width: $slider-controls-large-size;
      height: $slider-controls-large-size;
      flex: 0 0 $slider-controls-large-size;

      > svg {
        width: $slider-controls-large-icon-size;
        height: $slider-controls-large-icon-size;
      }
    }
  }
}