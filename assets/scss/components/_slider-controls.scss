/**
 * Placeholder for slider controls
 * for usage on various elements
 */

// -- default stuff, resets..
%slider-controls {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  > button {
    @include button-reset();

    transition: border-color .3s, color .3s, background-color .3s, opacity .3s;
    background-color: $slider-controls-bg;
    color: $slider-controls-color;

    width: $slider-controls-size;
    height: $slider-controls-size;
    flex: 0 0 $slider-controls-size;
    max-width: 100%;

    @include border-radius($slider-controls-border-radius);

    @if ( $slider-controls-border-width != 0 ) {
      border-width: $slider-controls-border-width;
      border-style: solid;
      border-color: $slider-controls-border-color;
    }

    &:not([disabled]) {
      &:hover, &:focus, &:active {
        color: $slider-controls-hover-color;
        background-color: $slider-controls-hover-bg;

        @if ( $slider-controls-border-width != 0 ) {
          border-color: $slider-controls-hover-border-color;
        }
      }
    }

    // -- disabled
    &[disabled] {
      pointer-events: none;
      cursor: not-allowed;
      opacity: $slider-controls-disabled-opacity;
    }
  }
}

// -- controls lg
@include placeholder('slider-controls-large') {

}

// -- positioning
@include placeholder('slider-controls-inner') {

}

@include placeholder('slider-controls-outer') {

}

// -- different theming
@include placeholder('slider-controls-on-image') {

}

