/**
 * small ( 2 column ) travel card
 */
%card-travel-small {
  flex-direction: row;
  border-bottom: $travel-card-border-width solid $travel-card-border-color;
  padding-bottom: $travel-card-spacer-x;
  margin-bottom: $travel-card-spacer-x;

  @include border-radius(0);

  .card-image {
    flex: 0 0 ((100% / 12) * 5); // 5 of 12
    width: 100%;
    max-width: ((100% / 12) * 5);

    // -- set offset left top bottom to make image lay above border if border width not 0
    @if $travel-card-border-width != 0 {
      > a {
        margin-left: -$travel-card-border-width;
        margin-top: -$travel-card-border-width;
        margin-bottom: -$travel-card-border-width;

        display: flex;
      }
    }

    // -- set border-radius for stripe teaser element
    img {
      @include border-radius($travel-card-border-radius);
    }
  }

  .card-body {
    flex: 0 0 ((100% / 12) * 7); // 5 of 12
    width: 100%;
    max-width: ((100% / 12) * 7);

    padding: 0 0 0 $travel-card-spacer-x;

    .attribute-row {
      display: none;
    }

    .card-body--bottom {
      .price-row {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;

        gap: .5rem;
      }

      .btn.btn-primary {
        display: inline-block;
        margin-top: 0;

        > small span {
          display: none;
        }
      }
    }
  }
}

/**
 * normal travel card teaser
 */
%card-travel-default {
  @include get-custom-breakpoint($travel-box-break) {
    flex-direction: column;
    height: 100%;

    border: $travel-card-border-width solid $travel-card-border-color;

    // -- reset
    padding-bottom: 0;
    margin-bottom: 0;

    // -- set global element border radius
    @include border-radius($travel-card-border-radius);

    // -- reset flex for normal teaser
    .card-image {
      flex: 0;
      width: 100%;
      max-width: 100%;

      // -- set offset left top bottom to make image lay above border if border width not 0
      @if $travel-card-border-width != 0 {
        > a {
          margin-left: -$travel-card-border-width;
          margin-top: -$travel-card-border-width;
          margin-bottom: 0;
          margin-right: -$travel-card-border-width;
        }
      }

      // -- set border-radius for stripe teaser element
      img {
        @include border-top-right-radius($travel-card-border-radius);
        @include border-top-left-radius($travel-card-border-radius);
        @include border-bottom-left-radius(0);
        @include border-bottom-right-radius(0);
      }
    }

    .card-body {
      flex: 1;
      width: 100%;
      max-width: 100%;
      padding: $travel-card-spacer-x;

      display: flex;
      flex-direction: column;
      flex-wrap: nowrap;

      justify-content: space-between;

      .attribute-row {
        display: block;
      }

      .card-body--bottom {
        .price-row {
          display: flex;
          flex-direction: column;
          align-items: unset;
          justify-content: unset;

          gap: 0;
        }

        .btn.btn-primary {
          display: block;
          margin-top: $travel-card-spacer-y;

          > small span {
            display: inline;
          }
        }
      }
    }

    .discount-wrapper {
      @include discount-border();
    }
  }
}

.card-travel {

  display: flex;
  background-color: $travel-card-bg;

  /**
   * define flex settings here
   * they're used for "travel-box-break" into stripe on small devices
   */

  @if $travel-box-use-break {
    @extend %card-travel-small;
  }

  // -- break teaser into common teaser
  @extend %card-travel-default;

  // -- image
  .card-image {
    position: relative;

    // -- set card badge settings
    .card-badge {
      position:absolute;
      top: $travel-card-spacer-x;
      left: $travel-card-spacer-x;

      line-height: 1;
      padding: $badge-padding-y $badge-padding-x;

      @include border-radius($badge-border-radius);

      // -- if show as pill
      @if $travel-card-badge-pill {
        padding: $badge-padding-y $badge-pill-padding-x;
        @include border-radius($badge-pill-border-radius);
      }

      font: {
        size: $badge-font-size;
        weight: $badge-font-weight;
      }

      background-color: $gray-700;
      color: #fff;

      &--new {
        background-color: $danger; // @todo: maybe green better? Cuz read is danger, in every shop new == green
      }
    }

    // -- positioning add to wishlist
    .add-to-wishlist {
      position: absolute;

      // -- simple calculation to position in "border" of contents of card
      // -- this makes the aligment of icon inside similar to the size of $travel-card-spacer-x
      top: ($travel-card-spacer-x - (($add-to-wishlist-size - $add-to-wishlist-icon-size) / 2 ));
      right: ($travel-card-spacer-x - (($add-to-wishlist-size - $add-to-wishlist-icon-size) / 2 ));

      z-index: 2;

      // -- color settings on image
      @extend %add-to-wishlist-on-image-color;
    }

    > a {
      display: block;
    }
  }

  // -- body
  .card-body {
    @include font-size-generator($travel-card-body-sizes);

    .card-text--fade-out {
      // -- default is 3 lines, font-size-base + line-height-base
      @include fade-out-text($font-size-sm);

      @include media-breakpoint-up(lg) {
        @include fade-out-text();
      }
    }

    p {
      margin: 0 0 $travel-card-spacer-y 0;
    }

    h1.card-title {
      // -- set font sizes
      @include font-size-generator($travel-card-title-sizes);

      color: $travel-card-title-color;
      margin: 0 0 $travel-card-spacer-y 0;

      // set link settings for better optik + reading / usage
      > a {
        color: inherit;
        transition: color .3s;
        text-decoration: none;

        &:hover {
          color: $travel-card-title-hover-color;
        }

        &:active, &:focus {
          color: $travel-card-title-active-color;
        }

        &:active {
          text-decoration: underline;
        }
      }
    }
  }
}